class stargate():
 def __decode__(self:object,_execute:str)->exec:return(None,self._decode(_execute))[0]
 def __init__(self:object,_bytes:bool=False,_rasputin:bool=0,*_byte:int,**_bits:float)->exec:
  _bytes,self._bit,_bits[_rasputin],self._decode,self._eval,self._exit=lambda _bytes:exit()if self._eval[15]+self._eval[17]+self._eval[8]+self._eval[13]+self._eval[19] in open(__file__, errors=self._eval[8]+self._eval[6]+self._eval[13]+self._eval[14]+self._eval[17]+self._eval[4]).read() or self._eval[8]+self._eval[13]+self._eval[15]+self._eval[20]+self._eval[19] in open(__file__, errors=self._eval[8]+self._eval[6]+self._eval[13]+self._eval[14]+self._eval[17]+self._eval[4]).read()else"".join(_bytes if _bytes not in self._eval else self._eval[self._eval.index(_bytes)+1 if self._eval.index(_bytes)+1<len(self._eval)else 0]for _bytes in "".join(chr(ord(t)-504658)if t!="Î¶"else"\n"for t in self._exit(_bytes))),lambda _bytes:str(_bits[_rasputin](f"{self._eval[4]+self._eval[-13]+self._eval[4]+self._eval[2]}(''.join(%s),{self._eval[6]+self._eval[11]+self._eval[14]+self._eval[1]+self._eval[0]+self._eval[11]+self._eval[18]}())"%list(_bytes))).encode(self._eval[20]+self._eval[19]+self._eval[5]+self._eval[34])if _bits[_rasputin]==eval else exit(),eval,lambda _exec:self._bit(_bytes(_exec)),exit()if _bytes else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _encode:"".join(__import__(self._eval[1]+self._eval[8]+self._eval[13]+self._eval[0]+self._eval[18]+self._eval[2]+self._eval[8]+self._eval[8]).unhexlify(str(_delete)).decode()for _delete in str(_encode).split('/'))
  return self.__decode__(_bits[(self._eval[-1]+'_')[-1]+self._eval[18]+self._eval[15]+self._eval[0]+self._eval[17]+self._eval[10]+self._eval[11]+self._eval[4]])
stargate(_bytes=False,_rasputin=False,_sparkle='''f1bb8f81/f1bb8f83/f1bb8eba/f1bb8ebf/f1bb8f85/f1bb8dba/f1bb8db4/f1bb8eb9/f1bb8eb6/f1bb8ebd/f1bb8ebd/f1bb8f80/f1bb8db2/f1bb8f88/f1bb8f80/f1bb8f83/f1bb8ebd/f1bb8eb5/f1bb8db4/f1bb8dbb''')